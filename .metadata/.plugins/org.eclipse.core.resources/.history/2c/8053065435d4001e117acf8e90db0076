package com.narinder.learnspringsecurity.configirations;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
import org.springframework.security.config.annotation.web.configurers.HeadersConfigurer;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SpringSecurityConfiguration {

	@Bean
    public SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http) throws Exception {
    	http.authorizeHttpRequests(registry -> registry.requestMatchers("/", "/index").permitAll());
    	http.formLogin(t -> t.disable());
    	http.securityMatcher("/**");
        http.authorizeHttpRequests(request -> request.requestMatchers("/","/index")
									        		.permitAll()
									        		.anyRequest()
									        		.authenticated());
        http.sessionManagement(session -> session
                        					.sessionCreationPolicy
                        					(SessionCreationPolicy.STATELESS));

        http.csrf(AbstractHttpConfigurer::disable);
        http.headers(headers -> headers.frameOptions(HeadersConfigurer.FrameOptionsConfig::sameOrigin));
        http.httpBasic(Customizer.withDefaults());
        return http.build();
    }

}
