package com.narinder.learnspringsecurity.configirations;

import javax.sql.DataSource;

import org.springframework.boot.jdbc.DataSourceBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
import org.springframework.security.config.annotation.web.configurers.HeadersConfigurer;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SpringSecurityConfiguration {

	@Bean
	public SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http) throws Exception {
		http.formLogin(t -> t.disable());
		http.securityMatcher("/**");
		http.authorizeHttpRequests(request -> request.requestMatchers("/").permitAll().anyRequest().authenticated());
		http.sessionManagement(session -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS));

		http.csrf(AbstractHttpConfigurer::disable);
		http.headers(headers -> headers.frameOptions(HeadersConfigurer.FrameOptionsConfig::sameOrigin));
		http.httpBasic(Customizer.withDefaults());
		return http.build();
	}

	public DataSource dataSource(DataSource dataSource) {
		DataSourceBuilder dataSourceBuilder = DataSourceBuilder.create()
				.url("jdbc:mysql://localhost:3306/springpractise").password("Momdad$163").username("root");
		return dataSourceBuilder.build();
	}

	public AuthenticationManagerBuilder authenticationManagerBuilder(AuthenticationManagerBuilder auth) {
		auth
		.jdbcAuthentication()
		.dataSource(dataSource)
	}

}
